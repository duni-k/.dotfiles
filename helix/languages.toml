[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 100 # set max completion results len for each group: words, snippets, unicode-input
feature_words = true # enable completion by word
feature_snippets = true # enable snippets
snippets_first = true # completions will return before snippets by default
snippets_inline_by_word_tail = false # suggest snippets by WORD tail, for example text `xsq|` become `x^2|` when snippet `sq` has body `^2`
feature_unicode_input = false # enable "unicode input"
feature_paths = false # enable path completion
feature_citations = false # enable citation completion (only on `citation` feature enabled)

# write logs to /tmp/completion.log
[language-server.scls.environment]
RUST_LOG = "info,simple-completion-language-server=info"
LOG_FILE = "/tmp/completion.log"

[language-server.pylsp.plugins]
pyflakes = { enabled = false }
mccabe = { enabled = false }
pyls_isort = { enabled = false }
pycodestyle = { enabled = false, maxLineLength = 88 }
pydocstyle = { enabled = false }
autopep8 = { enabled = false }
yapf = { enabled = false }
flake8 = { enabled = false }
pylint = { enabled = false }
ruff = { enabled = true, extendSelect = ["I"] }
mypy = { enabled = true, live_mode = true, strict = true }
[language-server.ruff-lsp]
command = "ruff-lsp"
[language-server.ruff-lsp.config]
documentFormatting = true
settings.run = "onSave"
[language-server.texlab]
command = "texlab"
[language-server.texlab.config]
auxDirectory = "output"
[language-server.texlab.config.chktex]
onOpenAndSave = true
onEdit = true
[language-server.texlab.config.build]
forwardSearchAfter = true
onSave = true
executable = "tectonic"
args = [
  "-X",
  "compile",
  "%f",
  "--synctex",
  "--keep-logs",
  "--keep-intermediates",
  "--outdir=output",
  "-Zshell-escape",
]

[[language]]
name = "python"
roots = ["pyproject.toml"]
auto-format = true
formatter = { command = 'ruff', args = ["format", "--stdin"] }
language-servers = [
  { name = "scls" },
  { name = "pylsp" },
  { name = "ruff-lsp" },
]

[[language]]
name = "rust"

[[language]]
name = "go"

[[language]]
name = "latex"
language-servers = ["texlab"] # ltex provides some autocompletion/grammar suggestions
indent = { tab-width = 4, unit = " " }

[[language]]
name = "ruby"
language-servers = [
  { name = "solargraph" },
  { name = "ruby-lsp" },
  { name = "scls" },
]
scope = "source.ruby"
injection-regex = "ruby"
file-types = [
  "rb",
  "rake",
  "rakefile",
  "irb",
  "gemfile",
  "gemspec",
  "Rakefile",
  "Gemfile",
  "rabl",
  "jbuilder",
  "feature",
  "jb",
  "Podfile",
  "podspec",
  "Vagrantfile",
  "Brewfile",
  "rjs",
  "rbi",
  "Guardfile",
  "Capfile",
  "Cheffile",
  "Hobofile",
  "Appraisals",
  "Rantfile",
  "Berksfile",
  "Berksfile.lock",
  "Thorfile",
  "Puppetfile",
  "Fastfile",
  "Appfile",
  "Deliverfile",
  "Matchfile",
  "Scanfile",
  "Snapfile",
  "Gymfile",
]
shebangs = ["ruby"]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }

formatter = { command = "rubocop", args = ["--stdin", "foo.rb", "-a", "--stderr", "--fail-level", "fatal", "--server"] }

[[language]]
name = "yaml"
language-servers = [{ name = "yaml-language-server" }]
auto-format = true
formatter = { command = 'dprint', args = ["fmt", "--stdin", "yaml"] }

[[language]]
name = "json"
auto-format = true
formatter = { command = 'dprint', args = ["fmt", "--stdin", "json"] }

[[language]]
name = "markdown"
auto-format = true
formatter = { command = 'dprint', args = ["fmt", "--stdin", "markdown"] }

[[language]]
name = "toml"
auto-format = true
formatter = { command = 'dprint', args = ["fmt", "--stdin", "toml"] }
